<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.1</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.pmtech</groupId>
	<artifactId>doctor-crud-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>doctor-crud-service</name>
	<description>doctor-crud-service</description>

	<properties>
		<appName>ch-docter-crud-service</appName>
		<java.version>17</java.version>
		<spring-cloud.version>2024.0.0</spring-cloud.version>
		<unit-tests.skip>false</unit-tests.skip>
		<jacoco.dataFile>${project.fedir}/target/jacoco.exec</jacoco.dataFile>
		<jacoco.reporting.outputDirectory>${project.fedir}/target/reports/jacoco</jacoco.reporting.outputDirectory>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.junit.reportPaths>${project.fedir}/target/surefire-reports</sonar.junit.reportPaths>
		<sonar.surefire.reportPaths>${project.fedir}/target/surefire-reports</sonar.surefire.reportPaths>
		<sonar.jacoco.reportPaths>${project.fedir}/target/jacoco.exec</sonar.jacoco.reportPaths>
		<sonar.language>java</sonar.language>
		<docker.image.prefix>archinsurance</docker.image.prefix>
		<dockerNamespace>archinsurance/dstores/fe</dockerNamespace>
	</properties>

	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>2.3.5</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.0-b170201.1204</version>
		</dependency>

		<dependency>
			<groupId>javax.activation</groupId>
			<artifactId>activation</artifactId>
			<version>1.1</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>jaxb-runtime</artifactId>
			<version>2.3.0-b170127.1453</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.12.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.cloud.tools</groupId>
			<artifactId>jib-maven-plugin</artifactId>
			<version>3.3.2</version>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<defaultGoal>clean package</defaultGoal>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>

				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>false</skipTests>
					<excludes>
						<exclude>*ApplicationTests.java</exclude>
					</excludes>
					
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>3.0.0-M3</version>
				<configuration>
					<outputDirectory>${fedir}/target/newsite</outputDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.10</version>
				<configuration>
					<destFile>${sonar.jacoco.reportPaths}</destFile>
					<append>true</append>
				</configuration>
				<executions>
					<execution>
						<id>default-prerpare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<outputDirectory>${jacoco.reporting.outputDirectory}</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>default-report-aggregate</id>
						<phase>verify</phase>
						<goals>
							<goal>report-aggregate</goal>
						</goals>
						<configuration>
							<dataFileIncludes>
								<dataFileInclude>${jacoco.dataFile}</dataFileInclude>
							</dataFileIncludes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>3.4.0</version>
				<configuration>
					<!-- Base Image -->
					<from>
						<image>eclipse-temurin:17-jre-jammy</image>
						<platforms>
							<platform>
								<architecture>amd64</architecture>
								<os>linux</os>
							</platform>
						</platforms>
					</from>
					<!-- Container Configuration -->
					<container>
						<entrypoint>
							<shell>bash</shell>
							<arg>-c</arg>
							<arg>/entrypoint.sh</arg>
						</entrypoint>
						<ports>
							<port>8080</port>
						</ports>
						<creationTime>USE_CURRENT_TIMESTAMP</creationTime>
						<user>1000</user>
						<environment>
							<SPRING_PROFILES_ACTIVE>prod</SPRING_PROFILES_ACTIVE>
							<!-- Add more environment variables if needed -->
						</environment>
					</container>
					<!-- Extra Directories (for adding entrypoint.sh or other files) -->
					<extraDirectories>
						<paths>src/main/jib</paths>
						<permissions>
							<permission>
								<file>/entrypoint.sh</file>
								<mode>755</mode>
							</permission>
						</permissions>
					</extraDirectories>
					<!-- Output Paths (for saving the image locally) -->
					<outputPaths>
						<tar>${project.build.directory}/${project.artifactId}-image.tar</tar>
						<digest>${project.build.directory}/${project.artifactId}-image.digest</digest>
						<imageId>${project.build.directory}/${project.artifactId}-image.id</imageId>
					</outputPaths>
					<!-- Push to Docker Hub -->
					<!-- <to>
						<image>trialt6dmgx.jfrog.io/test-key-docker-local/doctorcrudservice</image>
						<auth>
							<username>mahajanatul525</username>
							<password>Matul_525</password>
						</auth>
					</to> -->
				</configuration>
			</plugin>
		</plugins>
	</build>
	<distributionManagement>
		<repository>
			<id>maven-releases</id>
			<url>${maven.releases.url}</url>
		</repository>
		<snapshotRepository>
			<id>maven-snapshots</id>
			<url>${maven.snapshots.url}</url>
		</snapshotRepository>
	</distributionManagement>
</project>